/* --- Root Variables and Theming --- */
:root {
    --primary-bg: #1f2937;
    --secondary-bg: #111827;
    --tertiary-bg: #374151;
    --text-color: #f3f4f6;
    --hint-color: #666;
    --input-bg: #111827;
    --border-color: #4b5563;
    --button-bg: #3b82f6;
    --button-hover: #2563eb;
    --indented-bg: #111827;
    --indented-border: #4b5563;
    --disabled-bg: #4b5563;
    --disabled-text: #9ca3af;
    --checkbox-unchecked: #4b5563;
    --checkbox-checked: #3b82f6;
    --checkbox-hover: #6b7280;
    --error-border: #ff5252;
    --error-bg: rgba(255, 82, 82, 0.1);
    --warning-color: #f59e0b; /* Use a consistent warning color */
    
    /* Scrollbar Variables */
    --scrollbar-width: 12px;
    --scrollbar-track: var(--secondary-bg);
    --scrollbar-thumb: var(--tertiary-bg);
    --scrollbar-thumb-hover: var(--button-bg);
    --scrollbar-border: var(--border-color);
}

[data-theme="light"] {
    --primary-bg: #f3f4f6;
    --secondary-bg: #e5e7eb;
    --tertiary-bg: #d1d5db;
    --text-color: #666;
    --hint-color: #374151;
    --input-bg: #ffffff;
    --border-color: #9ca3af;
    /* button-bg, button-hover remain the same blue */
    --indented-bg: #e5e7eb;
    --indented-border: #9ca3af;
    --disabled-bg: #d1d5db;
    --disabled-text: #6b7280;
    --checkbox-unchecked: #9ca3af;
    /* checkbox-checked remains blue */
    /* checkbox-hover remains gray */
    
    /* Light Theme Scrollbar Variables */
    --scrollbar-track: #f0f0f0;
    --scrollbar-thumb: #c1c1c1;
    --scrollbar-thumb-hover: var(--button-bg);
    --scrollbar-border: #e0e0e0;
}

/* --- Scrollbar Customization --- */
/* Webkit browsers (Chrome, Safari, Edge) */
::-webkit-scrollbar {
    width: var(--scrollbar-width);
    height: var(--scrollbar-width);
}

::-webkit-scrollbar-track {
    background: var(--scrollbar-track);
    border-radius: 6px;
}

::-webkit-scrollbar-thumb {
    background: var(--scrollbar-thumb);
    border-radius: 6px;
    border: 3px solid var(--scrollbar-track);
}

::-webkit-scrollbar-thumb:hover {
    background: var(--scrollbar-thumb-hover);
}

/* Firefox scrollbar */
* {
    scrollbar-width: thin;
    scrollbar-color: var(--scrollbar-thumb) var(--scrollbar-track);
}

/* Scrollbar hover behavior for flags-checkbox-container */
.flags-checkbox-container:hover::-webkit-scrollbar-thumb {
    background: var(--scrollbar-thumb-hover);
}

.flags-checkbox-container:hover {
    scrollbar-color: var(--scrollbar-thumb-hover) var(--scrollbar-track);
}

/* --- Global Styles --- */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* --- File Actions --- */
.file-actions {
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-bottom: 20px;
    padding: 0 20px;
}

.file-action-button {
    align-self: flex-start;
    padding: 8px 15px;
    font-size: 15px;
    background-color: var(--button-bg);
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.file-action-button:hover:not(:disabled) {
    background-color: var(--button-hover);
}

.file-action-button:disabled {
    background-color: var(--disabled-bg);
    color: var(--disabled-text);
    cursor: not-allowed;
}

/* Remove the old class as it's replaced with file-action-button */
.open-json-button {
    margin-top: 10px;
    margin-bottom: 15px;
    display: block;
}

html {
    line-height: 1.6;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

body {
    background-color: var(--primary-bg);
    color: var(--text-color);
    transition: background-color 0.3s, color 0.3s;
    padding: 20px;
    min-height: 100vh;
}

/* --- Header --- */
header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 30px;
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
}

.title-container h1 {
    font-size: 24px;
    margin-bottom: 10px;
}

.header-controls {
    display: flex;
    gap: 15px;
    align-items: center;
}

.browser-support {
    margin-top: 10px;
    font-size: 12px;
    padding: 8px;
    background-color: var(--indented-bg);
    border: 1px solid var(--indented-border);
    border-radius: 4px;
    max-width: 300px;
}

/* --- Buttons & Controls --- */
button {
    background-color: var(--button-bg);
    color: white;
    border: none;
    padding: 8px 12px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.2s;
    white-space: nowrap;
}

button:hover:not(:disabled) {
    background-color: var(--button-hover);
}

button:disabled {
    background-color: var(--disabled-bg);
    color: var(--disabled-text);
    cursor: not-allowed;
}

.theme-toggle, .lang-selector {
    position: relative;
}

.dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    background-color: var(--secondary-bg);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    padding: 8px 0;
    z-index: 100;
    min-width: 150px;
    display: none;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.dropdown.show {
    display: block;
}

.dropdown button {
    display: block;
    width: 100%;
    text-align: left;
    background: none;
    color: var(--text-color);
    padding: 8px 16px;
    border: none;
    border-radius: 0;
}

.dropdown button:hover {
    background-color: var(--tertiary-bg);
}

/* --- Editor Layout --- */
.editor-container {
    background-color: var(--secondary-bg);
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

/* --- Field Groups & Rows --- */
.field-group {
    width: 100%;
    margin-bottom: 15px;
    padding: 15px;
    border-radius: 6px;
    background-color: var(--indented-bg);
    border: 1px solid var(--indented-border);
}
.field-group h3, .field-group h4 {
    margin-bottom: 15px;
    font-weight: 600;
}

/* Nested field groups */
.field-group .field-group {
    margin-top: 15px;
    background-color: var(--secondary-bg);
}

.field-row {
    display: flex;
    margin-bottom: 12px;
    align-items: center;
    gap: 15px;
}

/* --- Labels & Help Icons --- */
.field-label, .field-label-small {
    display: flex;
    align-items: center;
    flex-shrink: 0;
}
.field-label {
    flex-basis: 200px;
}
.field-label-small {
    flex-basis: 120px;
}

.field-label .help-icon, .field-label-small .help-icon {
    margin-left: 8px;
    cursor: help;
}

.help-icon {
    cursor: pointer;
    font-size: 16px;
    color: var(--button-bg);
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
}

.tooltip {
    position: absolute;
    bottom: 100%;
    left: 0;
    transform: translateY(-5px);
    background-color: var(--tertiary-bg);
    color: var(--text-color);
    padding: 10px;
    border-radius: 4px;
    font-size: 13px;
    width: 250px;
    max-width: calc(100vw - 30px);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    z-index: 110;
    display: none;
    pointer-events: none;
    text-align: left;
    line-height: 1.4;
}

.help-icon:hover .tooltip {
    display: block;
}

/* Right-align tooltip when help icon is near right edge */
@media (min-width: 768px) {
    .field-label:last-child .help-icon .tooltip,
    .field-row:last-child .help-icon .tooltip,
    .field-input .help-icon .tooltip {
        left: auto;
    }
}

/* --- Inputs --- */
.field-input {
    flex: 1;
    min-width: 150px;
}

select {
    cursor: pointer;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='gray'><path d='M3 4h6L6 8z'/></svg>");
    background-repeat: no-repeat;
    background-position: right 12px center;
    background-size: 18px;
    padding-right: 32px !important; /* Add more right padding to make room for the arrow */
    transition: background-image 0.2s ease;
}

/* Hover state for select dropdown arrow - light theme */
select:hover {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%233b82f6'><path d='M3 4h6L6 8z'/></svg>");
}

/* Focus state for select dropdown arrow when open - light theme */
select:focus {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%232563eb'><path d='M3 4h6L6 8z'/></svg>");
}

/* Dark theme arrow adjustment */
[data-theme="dark"] select {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='lightgray'><path d='M3 4h6L6 8z'/></svg>");
}

/* Hover state for select dropdown arrow - dark theme */
[data-theme="dark"] select:hover {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%233b82f6'><path d='M3 4h6L6 8z'/></svg>");
}

/* Focus state for select dropdown arrow when open - dark theme */
[data-theme="dark"] select:focus {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%232563eb'><path d='M3 4h6L6 8z'/></svg>");
}

/* Firefox specific - remove dotted focus outline */
select:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 var(--text-color);
}

/* Remove dropdown arrow in IE10+ */
select::-ms-expand {
    display: none;
}

input[type="text"],
input[type="number"],
select,
textarea {
    width: 100%;
    padding: 8px 12px;
    border-radius: 4px;
    border: 1px solid var(--border-color);
    background-color: var(--input-bg);
    color: var(--text-color);
    font-size: 14px;
    transition: border-color 0.2s, background-color 0.2s, box-shadow 0.2s;
}

input[type="text"]:hover,
input[type="number"]:hover,
select:hover,
textarea:hover {
    border-color: var(--button-bg);
    box-shadow: 0 0 0 1px rgba(59, 130, 246, 0.3);
}

input:focus, select:focus, textarea:focus {
    outline: none;
    border-color: var(--button-bg);
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.4);
}

/* --- Checkboxes and Radio Buttons --- */
input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    width: 20px;
    height: 20px;
    border-radius: 4px;
    border: 2px solid var(--checkbox-unchecked);
    background-color: transparent;
    margin-right: 10px;
    position: relative;
    cursor: pointer;
    vertical-align: middle;
    transition: all 0.2s ease;
    flex-shrink: 0;
    cursor: pointer;
}

input[type="checkbox"]:hover {
    border-color: var(--checkbox-hover);
    background-color: rgba(107, 114, 128, 0.1);
}

input[type="checkbox"]:checked {
    background-color: #22c55e;
    border-color: #22c55e;
}

input[type="checkbox"]:checked::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 10px;
    height: 4px;
    border-left: 2px solid white;
    border-bottom: 2px solid white;
    transform: translate(-50%, -70%) rotate(-45deg);
}

/* Radio buttons styling */
input[type="radio"] {
    appearance: none;
    -webkit-appearance: none;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 2px solid var(--checkbox-unchecked);
    background-color: var(--secondary-bg); /* Dark background for unchecked */
    position: relative;
    cursor: pointer;
    vertical-align: middle;
    transition: all 0.2s ease;
    flex-shrink: 0;
    margin-right: 5px;
    cursor: pointer;
}

input[type="radio"]::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #333; /* Black dot for unchecked */
    opacity: 0.7;
    transition: all 0.2s ease;
}

input[type="radio"]:hover {
    border-color: var(--checkbox-hover);
}

input[type="radio"]:checked {
    background-color: #22c55e; /* Green background for checked */
    border-color: #22c55e;
}

input[type="radio"]:checked::after {
    background-color: white; /* White dot for checked */
    opacity: 1;
}

.radio-group {
    display: flex;
    gap: 15px;
    margin-bottom: 10px;
}

.radio-label {
    display: flex;
    align-items: center;
}

.spell-type-selection {
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 10px;
    margin-bottom: 15px;
}

/* --- Disabled State --- */
.disabled {
    opacity: 0.6;
    pointer-events: none;
}

/* Prevent disabled effect from being applied multiple times */
.disabled .disabled {
    opacity: 1;
}

/* Allow help icons within disabled sections to remain interactive */
.disabled .help-icon {
    opacity: 1;
    pointer-events: auto;
    position: relative;
    z-index: 101;
}
.disabled .help-icon .tooltip {
     pointer-events: auto;
}

/* --- Dynamic Lists (Properties, Spells, States) --- */
.property-item, .array-item, .state-item {
    display: flex;
    margin-bottom: 10px;
    align-items: flex-start;
    gap: 10px;
    flex-direction: column;
}
.state-item > .field-group {
    flex-grow: 1;
}

.property-input {
    flex-grow: 1;
}

/* Troop placement settings */
.isBank-input-container {
    display: flex;
    align-items: center;
    gap: 10px;
}

#isBank {
    width: 100px;
}

/* Unified remove buttons */
.remove-property, .remove-spell, .remove-state {
    background-color: #ef4444;
    color: white;
    border: none;
    border-radius: 4px;
    padding: 4px 10px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.2s;
    height: fit-content;
    margin-top: 5px;
    flex-shrink: 0;
}
.remove-property:hover, .remove-spell:hover, .remove-state:hover {
    background-color: #dc2626;
}

/* Unified add buttons */
.add-item, .add-spell, .add-state, .add-spell-btn {
    margin-top: 10px;
    min-width: 130px;
    background-color: #22c55e;
}
.add-item:hover, .add-spell:hover, .add-state:hover, .add-spell-btn:hover {
    background-color: #16a34a;
}

/* --- Bottom Controls & JSON Preview --- */
.bottom-controls {
    margin-top: 30px;
    padding-top: 20px;
    border-top: 1px solid var(--border-color);
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    align-items: center;
}

.save-button, .json-preview-toggle {
    padding: 10px 20px;
    font-size: 16px;
    min-width: 150px;
    text-align: center;
}

/* Settings Button and Dropdown */
.settings-container {
    position: relative;
}

.settings-button {
    background-color: var(--button-bg);
    color: white;
    border: none;
    padding: 8px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
}

.settings-button:hover {
    background-color: var(--button-hover);
}

.settings-icon {
    width: 18px;
    height: 18px;
    filter: invert(1);
}

.settings-dropdown {
    position: absolute;
    bottom: 100%;
    background-color: var(--secondary-bg);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    padding: 12px;
    z-index: 100;
    min-width: 180px;
    display: none;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.settings-dropdown.show {
    display: block;
}

.settings-group h4 {
    margin: 0 0 10px 0;
    font-size: 14px;
    font-weight: 600;
}

.radio-option {
    display: flex;
    align-items: center;
    margin-bottom: 6px;
}

.radio-option:last-child {
    margin-bottom: 0;
}

.radio-option input[type="radio"] {
    margin-right: 8px;
}

.radio-option label {
    cursor: pointer;
}

.json-preview {
    background-color: var(--indented-bg);
    padding: 15px;
    border-radius: 6px;
    white-space: pre-wrap;
    word-wrap: break-word;
    font-family: 'Courier New', Courier, monospace;
    max-height: 400px;
    overflow-y: auto;
    border: 1px solid var(--indented-border);
    display: none;
    width: 100%;
    margin-top: 15px;
    color: var(--text-color);
}

.json-preview.show {
    display: block;
}

/* --- PWA Install Button --- */
.install-pwa {
    display: none; /* Hidden by default until prompt is available */
    background-color: #6366f1;
}
.install-pwa:hover {
    background-color: #4f46e5;
}

/* --- Validation & Hints --- */
.invalid-input {
    border: 2px solid var(--error-border) !important;
    background-color: var(--error-bg);
}

.property-warning {
    color: var(--warning-color);
    margin-right: 8px;
    cursor: help;
    font-size: 16px;
    display: inline-flex;
    align-items: center;
    flex-shrink: 0;
}

.property-hint {
    font-size: 0.85em;
    color: var(--hint-color);
    opacity: 0.7;
    margin-top: 8px;
    display: block;
    line-height: 1.4;
    text-wrap: auto;
}

/* --- Resizable Textarea --- */
.textarea-container {
    position: relative;
    width: 100%;
}

textarea.resizable-textarea {
    min-height: 80px;
    resize: vertical;
    line-height: 1.5;
    overflow: auto;
}

.line-break-indicator {
    position: absolute;
    color: var(--border-color);
    font-size: 12px;
    user-select: none;
    pointer-events: none;
    opacity: 0.7;
    font-family: monospace;
    line-height: 1;
}

/* Spell Flags Checkboxes */
.flags-checkbox-container {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-bottom: 10px;
    max-height: 150px;
    overflow-y: auto;
    padding-right: 5px;
}

.flag-checkbox-item {
    display: flex;
    align-items: center;
    width: 100%;
}

.flag-checkbox-item label {
    display: flex;
    align-items: center;
    cursor: pointer;
    font-size: 14px;
    width: 100%;
}

.flags-summary {
    font-size: 0.85em;
    color: var(--hint-color);
}

.flags-selected-values {
    font-weight: bold;
}

.checkbox-group {
    display: flex;
    gap: 10px;
}

.checkbox-group label {
    display: flex;
    flex-direction: column-reverse;
    gap: 2px;
}

.checkbox-group label input[type="checkbox"] {
    align-self: center;
    margin: 0;
}

/* --- Primary Skills & Artifact Type Fields --- */
.skills-primary-fields,
.artifact-type-fields,
.resources-fields,
.guardians-fields {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    width: 100%;
}

.skill-field,
.artifact-field,
.resource-field,
.guardian-field {
    display: flex;
    flex-direction: column;
    flex: 1;
    min-width: 80px;
}

.skill-field label,
.artifact-field label,
.resource-field label,
.guardian-field label {
    font-size: 14px;
    margin-bottom: 4px;
    text-align: center;
}

.skill-field input,
.artifact-field input,
.resource-field input,
.guardian-field input {
    width: 100%;
}

/* --- Tabs Layout (Unified for States and Spells) --- */
.states-header-row,
.spells-header-row {
    display: flex;
    align-items: center;
}

.states-buttons,
.spells-buttons {
    display: flex;
    gap: 10px;
}

.states-tabs-container,
.spells-tabs-container {
    width: 100%;
}

.states-tabs-headers,
.spells-tabs-headers {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
    margin-bottom: 15px;
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 10px;
}

.state-tab-header,
.spell-tab-header {
    padding: 8px 15px;
    background-color: var(--secondary-bg);
    border: 1px solid var(--border-color);
    border-radius: 4px 4px 0 0;
    cursor: pointer;
    transition: all 0.2s ease;
    font-weight: 500;
    color: var(--text-color);
}

.state-tab-header:hover,
.spell-tab-header:hover {
    background-color: var(--tertiary-bg);
}

.state-tab-header.active,
.spell-tab-header.active {
    background-color: var(--button-bg);
    color: white;
    border-color: var(--button-bg);
}

.states-tabs-content .state-item,
.spells-tabs-content .array-item {
    display: none;
}

.states-tabs-content .state-item.active,
.spells-tabs-content .array-item.active {
    display: block;
}

.remove-state-btn,
.remove-spell-btn {
    background-color: #ef4444;
    margin-top: 10px;
    min-width: 130px;
}

.remove-state-btn:hover,
.remove-spell-btn:hover {
    background-color: #dc2626;
}

.remove-state-btn:disabled,
.remove-spell-btn:disabled {
    background-color: var(--disabled-bg);
    color: var(--disabled-text);
    cursor: not-allowed;
}

/* --- Responsive Design --- */
@media (max-width: 768px) {
    header {
        flex-direction: column;
        align-items: flex-start;
    }

    .header-controls {
        margin-top: 15px;
        width: 100%;
        justify-content: flex-start;
    }

    .field-row {
        flex-direction: column;
        align-items: flex-start;
        gap: 8px;
    }

    .field-label, .field-label-small {
        flex-basis: auto;
        width: 100%;
        margin-bottom: 5px;
    }
    .field-input {
        width: 100%;
    }

    .property-item, .array-item, .state-item {
        flex-direction: column;
        align-items: stretch;
    }
    .remove-property, .remove-spell, .remove-state {
        margin-top: 5px;
        align-self: flex-end;
        width: auto;
        padding: 6px 12px;
    }
    .state-item > .field-group {
        width: 100%;
    }

    .bottom-controls {
        flex-direction: column;
        align-items: stretch;
    }
    .save-button, .json-preview-toggle {
        width: 100%;
    }
    
    .save-button, .json-preview-toggle, .settings-button {
        width: 100%;
    }
    
    .settings-dropdown {
        width: 100%;
    }
    
    .skills-primary-fields,
    .artifact-type-fields,
    .resources-fields,
    .guardians-fields {
        flex-direction: column;
        gap: 8px;
    }
    
    .skill-field,
    .artifact-field,
    .resource-field,
    .guardian-field {
        width: 100%;
    }
    
    .states-header-row,
    .spells-header-row {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }
    
    .states-buttons,
    .spells-buttons {
        width: 100%;
        margin-left: 0;
    }
    
    .states-tabs-headers,
    .spells-tabs-headers {
        overflow-x: auto;
        padding-bottom: 5px;
        flex-wrap: nowrap;
    }
    
    .state-tab-header,
    .spell-tab-header {
        flex: 0 0 auto;
        white-space: nowrap;
    }
}

@media (max-width: 480px) {
    body {
        padding: 15px;
    }
    .editor-container {
        padding: 15px;
    }
    .field-group {
        padding: 10px;
    }
    button {
        padding: 10px 15px;
        font-size: 15px;
    }
    .dropdown {
        min-width: 120px;
    }
    .tooltip {
        width: 200px;
        font-size: 12px;
    }
}

#object-type {
    padding-left: 10px;
}

/* --- Hexagonal Grid Popup --- */
.grid-popup {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
}

.grid-popup-content {
    background-color: var(--primary-bg);
    margin: 5% auto;
    padding: 20px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    width: 90%;
    max-width: 850px; /* Set max-width to 850px */
    max-height: 90vh;
    overflow-y: auto;
}

.grid-popup-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.grid-popup-header h2 {
    margin: 0;
    font-size: 1.5rem;
}

.close-grid-popup {
    background: none;
    border: none;
    font-size: 1.5rem;
    color: var(--text-color);
    cursor: pointer;
}

.grid-popup-footer {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
}

.apply-grid, .cancel-grid {
    padding: 8px 15px;
}

.customize-btn {
    margin-left: 10px;
}

/* Hexagonal Grid */
.grid-container {
    display: flex;
    flex-direction: column;
    margin-top: 20px;
    position: relative;
    max-width: 100%;
    overflow-x: auto; /* Add horizontal scrolling */
    padding-bottom: 10px; /* Add padding for scrollbar */
}

.grid-row {
    display: flex;
    height: 35px;
    min-width: 750px; /* Ensure minimum width to show full grid */
}

.grid-row:nth-child(odd) {
    margin-left: 22px;
}

.hex-cell {
    width: 44px;
    height: 44px;
    position: relative;
    margin: 0 1px;
}

.hex-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    background-color: var(--indented-bg);
    font-size: 12px;
    cursor: pointer;
    user-select: none;
    transition: background-color 0.2s;
}

.hex-content:hover {
    background-color: var(--tertiary-bg);
}

.hex-cell.defenders .hex-content {
    background-color: #a34c50;
    color: white;
    position: relative;
}

.hex-cell.attackers .hex-content {
    background-color: #5b8c85;
    color: white;
    position: relative;
}

/* Add styles for default cells with darkened colors */
.hex-cell.defenders.default .hex-content {
    background-color: #4e2224; /* Darker red */
    color: #ddd;
}

.hex-cell.attackers.default .hex-content {
    background-color: #2c5336; /* Darker green */
    color: #ddd;
}

/* Add arrow indicators for direction */
.hex-cell.defenders .hex-content::before {
    content: "";
    position: absolute;
    left: 3px;
    top: 50%;
    width: 6px;
    height: 6px;
    border-bottom: 2px solid white;
    border-left: 2px solid white;
    transform: translateY(-50%) rotate(45deg);
}

.hex-cell.attackers .hex-content::after {
    content: "";
    position: absolute;
    right: 3px;
    top: 50%;
    width: 6px;
    height: 6px;
    border-top: 2px solid white;
    border-right: 2px solid white;
    transform: translateY(-50%) rotate(45deg);
}

/* Also add arrows to default cells */
.hex-cell.defenders.default .hex-content::before {
    border-color: #ddd;
}

.hex-cell.attackers.default .hex-content::after {
    border-color: #ddd;
}

/* Style for blocked cells */
.hex-cell.blocked .hex-content {
    opacity: 0.5;
    cursor: not-allowed;
    position: relative;
    /* Add diagonal striped pattern */
    background-image: repeating-linear-gradient(135deg,  
        rgba(150, 150, 150, 0.5) 0 25%,  
        transparent 25% 50%,  
        rgba(150, 150, 150, 0.5) 50% 75%,  
        transparent 75% 100%);
    background-size: 10px 10px;
}

.hex-cell.blocked .hex-content::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

/* Style for border cells */
.border-cell .hex-content {
    background-color: transparent;
    clip-path: none;
    cursor: default;
}

.border-cell .hex-content:hover {
    background-color: transparent;
}

.mode-switch {
    display: flex;
    margin-bottom: 15px;
    overflow: hidden;
    border-radius: 5px;
    border: 1px solid var(--border-color);
    align-items: center;
    padding-right: 10px;
}

.mode-hex-preview {
    width: 30px;
    height: 30px;
    position: relative;
    margin-right: 5px;
    margin-left: 10px;
    flex-shrink: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

.mode-hex-preview::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
}

.attackers-preview::before {
    background-color: #5b8c85; /* Green for attackers */
}

.defenders-preview::before {
    background-color: #a34c50; /* Red for defenders */
}

.attackers-preview::after {
    content: "";
    position: absolute;
    width: 8px;
    height: 8px;
    border-right: 2px solid white;
    border-top: 2px solid white;
    transform: rotate(45deg);
}

.defenders-preview::after {
    content: "";
    position: absolute;
    width: 8px;
    height: 8px;
    border-left: 2px solid white;
    border-bottom: 2px solid white;
    transform: rotate(45deg);
}

.disabled-cell-toggle-container {
    display: flex;
    align-items: center;
    margin-left: auto;
    gap: 5px;
}

.disabled-toggle-label {
    display: flex;
    align-items: center;
    cursor: pointer;
    user-select: none;
}

#disabled-cells-toggle {
    margin-right: 5px;
}

.blocked-preview::before {
    background-color: var(--indented-bg);
    opacity: 0.5;
}

.blocked-preview.styled::before {
    background-image: repeating-linear-gradient(135deg,  
        rgba(150, 150, 150, 0.5) 0 25%,  
        transparent 25% 50%,  
        rgba(150, 150, 150, 0.5) 50% 75%,  
        transparent 75% 100%);
    background-size: 10px 10px;
}

/* Update for blocked cells to support toggling */
.hex-cell.blocked .hex-content {
    opacity: 0.5;
    cursor: not-allowed;
    position: relative;
}

/* Pattern styling that can be toggled */
.hex-cell.blocked .hex-content.styled {
    background-image: repeating-linear-gradient(135deg,  
        rgba(150, 150, 150, 0.5) 0 25%,  
        transparent 25% 50%,  
        rgba(150, 150, 150, 0.5) 50% 75%,  
        transparent 75% 100%);
    background-size: 10px 10px;
}

/* Remove the background image from the original style */
.hex-cell.blocked .hex-content {
    background-image: none;
}

.switch-button {
    padding: 10px 20px;
    background-color: var(--indented-bg);
    border: none;
    cursor: pointer;
    flex: 1;
    transition: background-color 0.3s;
    color: var(--text-color);
}

.switch-button.active {
    background-color: var(--button-bg);
    color: white;
}

/* --- Responsive adjustments for hexagonal grid --- */
@media (max-width: 768px) {
    .grid-popup-content {
        width: 95%;
        margin: 5% auto;
        padding: 15px;
        max-height: 80vh; /* Slightly smaller on mobile */
    }
    
    .hex-cell {
        width: 36px;
        height: 36px;
    }
    
    .grid-row:nth-child(even) {
        margin-left: 18px;
    }
    
    .grid-popup-body {
        overflow-x: hidden; /* Hide outer horizontal scrolling */
    }
    
    .grid-container {
        margin-top: 15px;
        margin-bottom: 15px;
    }
    
    .grid-popup-footer {
        margin-top: 15px;
    }
}

@media (max-width: 480px) {
    .grid-popup-content {
        width: 100%;
        margin: 0;
        border-radius: 0;
        max-height: 100vh;
        height: 100vh;
    }
    
    .hex-cell {
        width: 32px;
        height: 32px;
    }
    
    .mode-switch {
        flex-direction: row;
    }
    
    .info-row {
        flex-wrap: wrap;
    }
    
    .grid-popup-header h2 {
        font-size: 1.2rem;
    }
}

/* Toggle Switch Styles */
.toggle-switch-label {
    display: flex;
    align-items: center;
    cursor: pointer;
    user-select: none;
}

.toggle-switch {
    position: relative;
    display: inline-block;
    width: 36px;
    height: 20px;
    background-color: var(--disabled-bg);
    border-radius: 10px;
    margin: 0 8px;
    transition: all 0.3s;
}

.toggle-switch::after {
    content: '';
    position: absolute;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background-color: white;
    top: 2px;
    left: 2px;
    transition: all 0.3s;
}

input[type="checkbox"]:checked + .toggle-switch {
    background-color: var(--button-bg);
}

input[type="checkbox"]:checked + .toggle-switch::after {
    transform: translateX(16px);
}

input[type="checkbox"]:focus + .toggle-switch {
    box-shadow: 0 0 1px var(--button-bg);
}

/* Hide the default checkbox visually but keep it accessible */
.toggle-switch-label input[type="checkbox"] {
    opacity: 0;
    width: 0;
    height: 0;
    position: absolute;
}

/* Object Selector Styles */
.object-selector-container {
    display: flex;
    align-items: center;
    gap: 10px;
    flex-wrap: wrap;
    width: 100%;
}

.object-selector {
    min-width: 250px;
    padding: 8px 30px 8px 12px;
    border-radius: 4px;
    border: 1px solid var(--border-color);
    background-color: var(--input-bg);
    color: var(--text-color);
    font-size: 14px;
    background-repeat: no-repeat;
    background-position: right 10px center;
    cursor: pointer;
    transition: all 0.3s ease;
}

.object-selector:hover {
    border-color: var(--button-bg);
    box-shadow: 0 0 0 1px rgba(59, 130, 246, 0.3);
}

.object-selector:focus {
    outline: none;
    border-color: var(--button-bg);
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.4);
}

/* Style for object number in selector */
.object-selector option {
    padding: 8px;
}

.new-object-btn {
    background-color: #22c55e;
}

.new-object-btn:hover {
    background-color: #16a34a;
}

.remove-object-btn {
    background-color: #ef4444;
}

.remove-object-btn:hover:not(:disabled) {
    background-color: #dc2626;
}

.duplicate-warning {
    display: flex;
    align-items: center;
    color: var(--warning-color);
    font-size: 14px;
}

.warning-icon {
    margin-right: 5px;
}

/* Make the file actions more responsive */
@media (max-width: 768px) {
    .file-actions {
        flex-direction: column;
        align-items: flex-start;
    }
    
    .object-selector-container {
        margin: 10px 0;
        width: 100%;
    }
    
    .object-selector {
        flex-grow: 1;
    }
    
    #reset-form {
        align-self: flex-end;
    }
}